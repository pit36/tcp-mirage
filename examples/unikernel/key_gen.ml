(* Generated by mirage configure -t unix (Tue, 6 Feb 2018 14:36:15 GMT). *)

let dhcp () = false

let interface =Functoria_runtime.Key.create
  (Functoria_runtime.Arg.opt Cmdliner.Arg.string "tap0" (Cmdliner.Arg.info
   ~docs:"UNIKERNEL PARAMETERS" ?docv:(Some "INTERFACE")
   ?doc:(Some "The network interface listened by the unikernel.  ")
   ?env:(None) ["interface"]))
let interface_t = Functoria_runtime.Key.term interface
let interface () = Functoria_runtime.Key.get interface

let ipv4 =Functoria_runtime.Key.create
  (Functoria_runtime.Arg.opt Mirage_runtime.Arg.ipv4 (Ipaddr.V4.Prefix.of_address_string_exn "10.0.0.2/24") (Cmdliner.Arg.info
   ~docs:"UNIKERNEL PARAMETERS" ?docv:(Some "IPV4")
   ?doc:(Some
           "The network of the unikernel specified as an IP address and netmask, e.g. 192.168.0.1/16 .  ")
   ?env:(None) ["ipv4"]))
let ipv4_t = Functoria_runtime.Key.term ipv4
let ipv4 () = Functoria_runtime.Key.get ipv4

let ipv4_gateway =Functoria_runtime.Key.create
  (Functoria_runtime.Arg.opt (Cmdliner.Arg.some Mirage_runtime.Arg.ipv4_address) 
   (Some (Ipaddr.V4.t_of_sexp (Sexplib.Sexp.of_string "10.0.0.1"))) (Cmdliner.Arg.info
   ~docs:"UNIKERNEL PARAMETERS" ?docv:(Some "IPV4-GATEWAY")
   ?doc:(Some "The gateway of the unikernel.  ") ?env:(None)
   ["ipv4-gateway"]))
let ipv4_gateway_t = Functoria_runtime.Key.term ipv4_gateway
let ipv4_gateway () = Functoria_runtime.Key.get ipv4_gateway

let logs =Functoria_runtime.Key.create
  (Functoria_runtime.Arg.opt (Cmdliner.Arg.list Mirage_runtime.Arg.log_threshold) [] (Cmdliner.Arg.info
   ~docs:"UNIKERNEL PARAMETERS" ?docv:(Some "LEVEL")
   ?doc:(Some
           "Be more or less verbose. $(docv) must be of the form\n$(b,*:info,foo:debug) means that that the log threshold is set to\n$(b,info) for every log sources but the $(b,foo) which is set to\n$(b,debug).  ")
   ?env:(Some (Cmdliner.Arg.env_var "MIRAGE_LOGS")) ["l"; "logs"]))
let logs_t = Functoria_runtime.Key.term logs
let logs () = Functoria_runtime.Key.get logs

let net () = `Direct

let prng () = `Stdlib

let target () = `Unix

let target_debug () = false

let warn_error () = false

let runtime_keys = List.combine [interface_t; ipv4_t; ipv4_gateway_t; logs_t] 
["interface"; "ipv4"; "ipv4-gateway"; "logs"]

